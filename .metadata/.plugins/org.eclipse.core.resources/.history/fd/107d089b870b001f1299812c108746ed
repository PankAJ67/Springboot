package com.hrms.service.impl;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hrms.dto.EmployeeDTO;
import com.hrms.dto.EmployeeDto;
import com.hrms.entity.Employee;
import com.hrms.repo.EmployeeRepo;
import com.hrms.service.EmployeeService;

@Service
public class EmployeeServiceImpl implements EmployeeService {

	@Autowired
	private EmployeeRepo employeeRepo;

	@Autowired
	private ModelMapper modelMapper;

//	@Override
//	public EmployeeDto createEmployee(EmployeeDto employeeDto) {
//		Employee EmployeeSavedToDB = this.employeeRepo.save(employeeDto);
//		return EmployeeSavedToDB;
//	}

	@Override
	 public EmployeeDTO createEmployee(EmployeeDTO employeeDTO) {
	        Employee employee = modelMapper.map(employeeDTO, Employee.class);
	        employee = employeeRepository.save(employee);
	        return modelMapper.map(employee, EmployeeDTO.class);
	    }
	
	
	
	@Override
	public EmployeeDto getEmployee(int Id) {
		Employee user = this.employeeRepo.findById(Id).get();
		EmployeeDto employeeDto = this.modelMapper.map(user, EmployeeDto.class);
		return employeeDto;
	}
	

  
    
    @Override
    public List<EmployeeDto> getAllEmployee() {
        List<Employee> emp = this.employeeRepo.findAll();
        List<EmployeeDto> collect = emp.stream().map(employee -> {
        	EmployeeDto map = this.modelMapper.map(employee, EmployeeDto.class);
        	return map;
        }).collect(Collectors.toList());
        return collect;
    }
	
    @Override
	public void deletePost(int id) {
    	this.employeeRepo.deleteById(id);
	
    }
//
//	@Override
//	public EmployeeDto updateEmployee(int id, Employee employee) {
//		// TODO Auto-generated method stub
//		return null;
//	}
//    
//    
    @Override
    public EmployeeDto updateEmployee (int id, EmployeeDto postRequest) {
		Employee post = employeeRepo.findById(id).get();
		post.setAddress(postRequest.getAddress());
        post.setCity(postRequest.getCity());
        
        Employee save = employeeRepo.save(post);
        EmployeeDto map = this.modelMapper.map(save, EmployeeDto.class);
		return map;
	}
    

	}

