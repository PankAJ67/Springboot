package com.hrms.service.impl;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;


import com.hrms.dto.EmployeeDto;
import com.hrms.dto.UploadDto;
import com.hrms.entity.Employee;
import com.hrms.repo.EmployeeRepo;
import com.hrms.service.uploadService;

import lombok.extern.java.Log;



@Service
public class uploadServiceImpl implements uploadService {
	

	

	@Autowired
	private EmployeeRepo employeeRepository;

	@Autowired
	private ModelMapper modelMapper;

	
	
//	@Override
//	 public EmployeeDto createEmployee(EmployeeDto employeeDTO) {
//		Employee employee = modelMapper.map(employeeDTO, Employee.class);
//		 employee = employeeRepo.save(employee);       
//	        return modelMapper.map(employee, EmployeeDto.class);
//	    }



	@Override
	public UploadDto createEmployee(MultipartFile profilePath, MultipartFile appoinmentLetterPath,
			MultipartFile relivingLetterPath, MultipartFile experienceLetterPath, UploadDto uploadDtO)
			throws IOException {
		
		    	//profile
		    
		    	if (!profilePath.isEmpty()) {
					String profileUploadDir = "C:\\Users\\SONY\\Documents\\"
							+ "workspace-spring-tool-suite-4-4.19.0.RELEASE\\HRMS_BACKEND-1\\"
							+ "src\\main\\resources\\static\\profile";
					
					try {
						String fileExtension = profilePath.getOriginalFilename()
								.substring(profilePath.getOriginalFilename().lastIndexOf(".") + 1);
						String filePath = profileUploadDir + File.separator + employeeDTO.getEmployeeId()
						+ "_profile" + "." + fileExtension;
						File file = new File(filePath);
						profile.transferTo(file);

						// Set the image path in the user DTO
						employeeDTO.setProfilePath(employeeDTO.getEmployeeId() + "_profile" + "." + 
						fileExtension);

					} catch (IOException e) {
					
						throw new IOException("Failed to save the profile: " + e.getMessage());
					}
				}

		    	//appointment letter
		    	
				if (!appoinmentLetter.isEmpty()) {
					String appointmentUploadDir = "C:\\Users\\SONY\\Documents\\"
							+ "workspace-spring-tool-suite-4-4.19.0.RELEASE\\HRMS_BACKEND-1\\"
							+ "src\\main\\resources\\static\\appointment letter";
					try {
						String fileExtension = appoinmentLetter.getOriginalFilename()
								.substring(appoinmentLetter.getOriginalFilename().lastIndexOf(".") + 1);
						String filePath = appointmentUploadDir + File.separator + 
							employeeDTO.getEmployeeId() + "_appoinmentLetter"+ "." + fileExtension;
						File file = new File(filePath);
						appoinmentLetter.transferTo(file);

						// Set the image path in the user DTO
						employeeDTO.setAppoinmentLetterPath(employeeDTO.getEmployeeId() +
								"_appoinmentLetter" + "." + fileExtension);

					} catch (IOException e) {
						e.printStackTrace();
						throw new IOException("Failed to save the appointment letter: " + e.getMessage());
					}
				}

				//reliving letter
				
				if (!relivingLetter.isEmpty()) {
					String relivingUploadDir = "C:\\Users\\SONY\\Documents\\"
							+ "workspace-spring-tool-suite-4-4.19.0.RELEASE\\HRMS_BACKEND-1\\"
							+ "src\\main\\resources\\static\\reliving letter";
					try {
						String fileExtension = relivingLetter.getOriginalFilename()
								.substring(relivingLetter.getOriginalFilename().lastIndexOf(".") + 1);
						String filePath = relivingUploadDir + File.separator + employeeDTO.getEmployeeId()
						+ "_relivingLetter" + "."	+ fileExtension;
						File file = new File(filePath);
						relivingLetter.transferTo(file);

						// Set the image path in the user DTO
						employeeDTO.setRelivingLetterPath(employeeDTO.getEmployeeId() + "_relivingLetter" 
						+ "." + fileExtension);

					} catch (IOException e) {
						e.printStackTrace();
						throw new IOException("Failed to save the reliving letter: " + e.getMessage());
					}
				}

				//experienced letter
				
				if (!experienceLetter.isEmpty()) {
					String experienceUploadDir = "C:\\Users\\SONY\\Documents\\"
							+ "workspace-spring-tool-suite-4-4.19.0.RELEASE\\HRMS_BACKEND-1\\"
							+ "src\\main\\resources\\static\\experienced letter";
					try {
						String fileExtension = experienceLetter.getOriginalFilename()
								.substring(experienceLetter.getOriginalFilename().lastIndexOf(".") + 1);
						String filePath = experienceUploadDir + File.separator + 
							employeeDTO.getEmployeeId() + "_experienceLetter" + "."+ fileExtension;
						File file = new File(filePath);
						experienceLetter.transferTo(file);

						// Set the image path in the user DTO
						employeeDTO.setExperienceLetterPath(employeeDTO.getEmployeeId() +
								"_experienceLetter" + "." + fileExtension);

					} catch (IOException e) {
						e.printStackTrace();
						throw new IOException("Failed to save the experience letter: " + e.getMessage());
					}
				}

		        Employee employee = modelMapper.map(uploadDtO, Employee.class);
		        employee = employeeRepository.save(employee);
		        return modelMapper.map(employee, UploadDto.class);
		    }


	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//		private final String   FOLDER_PATH = "D:/upload/";
//
//
//
//		
//		
//@Override
//public List<UploadDto>uploadfiles(@RequestParam("file")MultipartFile file) throws  IOException{
//
//	if(file == null )
//	{
//	
//		throw new IllegalArgumentException("invalid file");
//	}
//	
//
//	
//}
//}
//	
//	
//	
//	
	
	
	
	
	
	
	
	
//	String path  = FOLDER_PATH + file.getOriginalFilename();
//	
//
//	ProjectDto item = ProjectDto.builder()
//		
//		.filepath(path)
//			.build();
//	EmploRepository.saveAll(item);
//file.transferTo(new File(path).toPath()) ;
//return new  UploadDto();
//}


 



